name: build and deploy to vercel

on:
  push:
    branches:
      - main

env:
  FOUNDRY_PROFILE: ci

permissions:
  pull-requests: write
  deployments: write
  contents: write

jobs:
  build:
    strategy:
      matrix:
        branch: [${{ github.ref }}] # Get current branch name as a matrix variable 
        
    name: MUD project
    runs-on: ubuntu-latest
    
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id :pnpm-install 
        with :
          version :8 
          run_install :false 
      
      - uses :actions/setup-node@v3 
        with :
          node-version :"16" 
          cache :"pnm"
      
      - name :"Install Foundry" 
        uses :"foundry-rs/foundry-toolchain@v1" 
        with :
          version :'nightly'
      
       # Add following steps to cancel previous builds 

       # Check if new commits have been pushed to branch, and only build the last commit

       # Use git log command to get latest two commits, and save second last commit to env var LAST_COMMIT
      
       - name :"Check last commit"  
         run :'echo "::set-env name=LAST_COMMIT::$(git log --format="%H" HEAD^..HEAD)"'
         id: check_commit

       # Only execute build steps if new commits have been pushed to branch
  
       - name :"Build if new commit"
         run : |
           if [ "${{ github.sha }}" != "$LAST_COMMIT" ]; then
             echo "New commit detected. Cancelling previous builds."
             curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.groot-preview+json" \
              https://api.github.com/repos/${{ github.repository }}/actions/runs/$LAST_COMMIT/cancel
             pnpm install
             pnpm build
           else
             echo "No new commits. Skipping build."
           fi
      
      - name: Vercel Action
        uses: amondnet/vercel-action@v25

        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
          working-directory: ./packages/client/dist
          scope: ${{secrets.TEAM_SLUG}}